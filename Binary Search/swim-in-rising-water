class Solution {
public:
    map<pair<int,int>,bool> v;
    bool dfs(int n,int m,int o,vector<vector<int>>& a){
        v[{n,m}]=1;
        int x=a.size();
        int y=a[0].size();
        if(n==x-1 && n==m) return 1;
        if(n!=0 && !v[{n-1,m}])
            if(a[n-1][m]<o)
                if(dfs(n-1,m,o,a))
                    return 1;
        if(m!=0 && !v[{n,m-1}])
            if(a[n][m-1]<o)
                if(dfs(n,m-1,o,a))
                    return 1;
        if(n!=x-1 && !v[{n+1,m}])
            if(a[n+1][m]<o)
                if(dfs(n+1,m,o,a))
                    return 1;
        if(m!=y-1 && !v[{n,m+1}])
            if(a[n][m+1]<o)
                if(dfs(n,m+1,o,a))
                    return 1;
        return 0;
    }
    int swimInWater(vector<vector<int>>& a){
        int o=0;
        for(int i=11;i>=0;i--){
            v.clear();
            if(!dfs(0,0,o+(1<<i),a) || a[0][0]>=o+(1<<i)) o+=(1<<i);
        }
        return o;
    }
};
